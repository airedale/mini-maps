<!DOCTYPE html>
<html>

<head>


	<style type="text/css">

		* {
			color: #000 !important;
			font-family: Verdana, Arial, Helvetica, sans-serif !important;
			font-size: 9px !important;
		}

		span, a {
			color: #000 !important;
			opacity: 0.7;
			-moz-opacity: 0.7;
			-khtml-opacity: 0.7;
			font-family: 'Arial Narrow', Tahoma, Arial, Helvetica, sans-serif !important;
		}

		html, body, #map {
			height: 100%;
			margin: 0;
			padding: 0;
			width: 100%;
		}

		body {
			background: url(wait.gif) no-repeat 50% 50%;             
		}
   
	</style>

	<script type="text/javascript">

	<!--
    
    // Return Boolean value from parsed string
    function parseBoolean(str) {
        
        return /true/i.test(str);
        
    }

	// Return query string variable, or an empty string if it doesn't exist

	function getQueryStringVariable () {

		var query = window.location.search.substring(1);

		var vars = query.split('&');

		for (var i=0; i<getQueryStringVariable.arguments.length; i++) {

			for (var j=0; j<vars.length; j++) {

				var pair = vars[j].split('=');

				if (pair[0] == getQueryStringVariable.arguments[i]) {

					return decodeURIComponent(pair[1]);

				}

			}

		}

		return '';

	}

	

	function mapExecute() {

		var lat = getQueryStringVariable('latitude', 'lat');

		var lon = getQueryStringVariable('longitude', 'long', 'lon');

		var zoom = getQueryStringVariable('mzoom', 'mapzoom');
    	
        if (!zoom) {
    		zoom = '5';
    	}        

		var caption = getQueryStringVariable('caption');
        
    	if (!caption) {
    		caption = '';
    	}        

		var dom = document.getElementById('map');
        
		var streetViewControl = getQueryStringVariable('mstreetview', 'streetview');
        
    	if (!streetViewControl) {
    		streetViewControl = false;
    	}         
        
        var zoomControl = getQueryStringVariable('mzoomcontrol', 'mapzoomcontrol');
    	
        if (!zoomControl) {
    		zoomControl = false;
    	}
       
        var mapTypeControlSwitch = getQueryStringVariable('mtypecontrol', 'maptypecontrol');
        
     	if (!mapTypeControlSwitch) {
    		mapTypeControlSwitch = false;
    	}          
        
        var tmapTypeId = getQueryStringVariable('mtypeid', 'maptypeid');     

        switch(tmapTypeId) 
        {
        case '1':
            mapTypeId = google.maps.MapTypeId.SATELLITE;
            break;
        case '2':
            mapTypeId = google.maps.MapTypeId.HYBRID; 
            break;
        case '3':
            mapTypeId = google.maps.MapTypeId.TERRAIN; 
            break;            
        default:
            mapTypeId = google.maps.MapTypeId.ROADMAP;           
        } 
         
        var mapMarkerSwitch = getQueryStringVariable('marker');
        
     	if (!mapMarkerSwitch) {
    		mapMarkerSwitch = null;
    	}          
        
		// Set the map controls

		var navControl = { style: google.maps.ControlPosition.TOP_LEFT, position: google.maps.NavigationControlStyle.DEFAULT };

		var mapTypeControl = { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU, position: google.maps.ControlPosition.TOP_RIGHT };


		// Set the map options and create it

	    var myOptions = {

			zoom: parseInt(zoom, 10),

			center: new google.maps.LatLng(lat, lon),

			mapTypeId: mapTypeId, 

			navigationControl: true,

			navigationControlOptions: navControl,

			mapTypeControl: parseBoolean(mapTypeControlSwitch), 

			mapTypeControlOptions: mapTypeControl,
            
            streetViewControl: parseBoolean(streetViewControl),
            
            zoomControl: parseBoolean(zoomControl)

		};

	    var map = new google.maps.Map(dom, myOptions);



		// Create the marker with all of its components

		var image = new google.maps.MarkerImage('http://labs.google.com/ridefinder/images/mm_20_red.png', new google.maps.Size(12, 20), new google.maps.Point(0,0), new google.maps.Point(6, 20));

		var shadow = new google.maps.MarkerImage('http://labs.google.com/ridefinder/images/mm_20_shadow.png', new google.maps.Size(22, 20), new google.maps.Point(0,0),new google.maps.Point(6, 20));

		var shape = {coord: [1, 1, 1, 20, 18, 20, 18 , 1], type: 'poly'};

		var marker = new google.maps.Marker({

			position: new google.maps.LatLng(lat, lon),

			map: map,

			shadow: shadow,

			icon: image,

			shape: shape,

			title: caption

		});

        //map = marker on, null off
        if(parseBoolean(mapMarkerSwitch)){
            marker.setMap(map);
        }else{
            marker.setMap(null);
        }
	}

	-->

	</script>

</head>

<body>

	<div id="map"></div>

	<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&async=2&callback=mapExecute"></script>

</body>

</html>